
@{
    ViewBag.Title = "Kiosk";
}

<style>
    .table {
        width: 80%;
    }

    td, th {
        text-align: center;
    }

    .fade-in {
        opacity: 1;
        animation-name: fadeInOpacity;
        animation-iteration-count: 1;
        animation-timing-function: ease-in;
        animation-duration: 0.5s;
    }

    @@keyframes fadeInOpacity {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }

    .overdue {
        font-weight: bold;
        color: #c9302c;
    }


    .fade-in-new {
        opacity: 1;
        animation-name: fadeInNew;
        animation-iteration-count: 1;
        animation-timing-function: ease-in;
        animation-duration: 0.5s;
    }

    @@keyframes fadeInNew {
        0% {
            opacity: 0;
            color: #5cb85c;
        }

        75% {
            opacity: 0.75;
            color: #5cb85c;
        }

        100% {
            opacity: 1;
            color: white;
        }
    }
</style>



<h2>Self-Service Check-Out Kiosk</h2>

<br />
<br />


<div id="errorMessage" class="field-validation-error" style="margin: 2rem; display: none; font-weight: bold; text-align: center;">Invalid barcode, please try again.</div>



<section id="scanYourIdSection" style="display: flex; flex-direction: column; align-items: center;">
    <h3>Please scan your library card</h3>
    <p><em>*Or type in your barcode</em></p>

    @using (Html.BeginForm("KioskUserBarcode", "Home", FormMethod.Post, new { id = "userBarcodeForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="input-group">
            <input type="text" id="userBarcodeInput" name="userBarcode" value="" placeholder="Library Card Barcode" class="form-control" autofocus />
            <div class="input-group-btn">
                <button class="btn btn-default" type="submit"><i id="userBarcodeSubmitIcon" class="glyphicon glyphicon-arrow-right"></i></button>
            </div>
        </div>
    }



</section>




<h3 id="greetingUser" style="text-align: center; opacity: 0;"></h3>

<section id="scanYourBookSection" style="display: none; flex-direction: column; align-items: center; opacity: 0;">
    <br />

    <h3>Please scan your books</h3>
    <p><em>*Or type in the barcodes</em></p>

    @using (Html.BeginForm("KioskBookBarcode", "Home", FormMethod.Post, new { id = "bookBarcodeForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="input-group">
            <input type="text" id="bookBarcodeInput" name="bookBarcode" value="" placeholder="Book Barcode" class="form-control" autofocus />
            <div class="input-group-btn">
                <button class="btn btn-default" type="submit"><i id="bookBarcodeSubmitIcon" class="glyphicon glyphicon-arrow-right"></i></button>
            </div>
        </div>
    }

</section>



<a id="doneButton" href='@Url.Action("Kiosk", "Home")' class="btn btn-default pull-right" style="display: none; opacity: 0; margin-right: 10%;">
    <span class="glyphicon glyphicon-ok" aria-hidden="true" style="text-decoration: none !important; margin-right: 5px;"></span>
    Done
</a>




<br />
<br />



<section id="currentlyCheckedOutBooksSection" style="display: none; opacity: 0;">
    <h3>Your currently checked-out books:</h3>
    <table id="checkedOutBooksTable" class="table table-striped table-bordered" style="margin: 1rem 10%;">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Due Date</th>
            </tr>
        </thead>
        <tbody>
            <!-- Checked out books for this user will be appended to the table here-->
        </tbody>
    </table>
</section>



<br />
<br />





@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            let userId = "";

            // When the userBarcodeForm is submitted (meaning they scanned their library card) stop the form submission
            // and send it off to the controller ourselves.
            $("#userBarcodeForm").submit(e => {
                e.preventDefault();
                $("#errorMessage").hide(500);
                $("#userBarcodeSubmitIcon").addClass('glyphicon-repeat spin').removeClass('glyphicon-arrow-right');
                $.ajax({
                    type: "POST",
                    url: "/Home/KioskUserBarcode",
                    data: {
                        __RequestVerificationToken: getAntiForgeryToken(),
                        userBarcode: $("#userBarcodeInput").val()
                    },
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8'
                }).then(res => {
                    //console.log('res is:');
                    //console.log(res);
                    // The server liked the barcode, greet them and prompt them to scan their books
                    userId = res.userId;
                    $("#scanYourIdSection").hide(500);
                    $("#greetingUser").text("Hello " + res.fullName).css({ "display": "block" }).animate({ "opacity": 1 }, 500);
                    $("#scanYourBookSection").css({ "display": "flex" }).animate({ "opacity": 1 }, 500);
                    $("#doneButton").css({ "display": "flex" }).animate({ "opacity": 1 }, 500);
                    // Show table of currently checked out books and their due dates - if there are currently checked out books
                    $("#currentlyCheckedOutBooksSection").css({ "display": "block" }).animate({ "opacity": 1 }, 500);
                    res.currentlyCheckedOutBooks = res.currentlyCheckedOutBooks ? res.currentlyCheckedOutBooks : [];
                    res.currentlyCheckedOutBooks.forEach(eachBook => {
                        let title = eachBook.Title;
                        let author = eachBook.Author;
                        let dueDate = eachBook.DueDate;
                        if (eachBook.IsLate) {
                            $("#checkedOutBooksTable").find('tbody').append(`<tr class="fade-in"><td>${title}</td><td>${author}</td><td class="overdue">${dueDate}</td></tr>`);
                        } else {
                            $("#checkedOutBooksTable").find('tbody').append(`<tr class="fade-in"><td>${title}</td><td>${author}</td><td>${dueDate}</td></tr>`);
                        }
                    });
                    $("#bookBarcodeInput").focus();
                }).fail(err => {
                    // Server didn't like that barcode, log the error and show an error message.
                    console.log('Err is:');
                    console.log(err);
                    $("#userBarcodeSubmitIcon").removeClass('glyphicon-repeat spin').addClass('glyphicon-arrow-right');
                    if (err.responseJSON == undefined) {
                        $("#errorMessage").text("An unknown server error occurred, please refresh the page and try again").show(500);
                    } else {
                        $("#errorMessage").text(err.responseJSON.message).show(500);
                    }
                    $("#userBarcodeInput").val("");
                });
            });

            // When the bookBarcodeForm is submitted (meaning they scanned a book) stop the form submission
            // and send it off to the controller ourselves.
            $("#bookBarcodeForm").submit(e => {
                e.preventDefault();
                $("#errorMessage").hide(500);
                $("#bookBarcodeSubmitIcon").addClass('glyphicon-repeat spin').removeClass('glyphicon-arrow-right');
                $.ajax({
                    type: "POST",
                    url: "/Home/KioskBookBarcode",
                    data: {
                        __RequestVerificationToken: getAntiForgeryToken(),
                        userId: userId,
                        bookBarcode: $("#bookBarcodeInput").val()
                    },
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8'
                }).then(res => {
                    //console.log('res is:');
                    //console.log(res);
                    // The server liked the barcode, add the book to the table of currently checked out books
                    $("#scanYourBookSection").animate({ "opacity": 0 }, 500, () => {
                        $("#bookBarcodeInput").val("");
                        // Add the book to the table
                        let title = res.bookDetails.Title;
                        let author = res.bookDetails.Author;
                        let dueDate = res.dueDate;
                        $("#checkedOutBooksTable").find('tbody').append(`<tr class="fade-in-new"><td>${title}</td><td>${author}</td><td>${dueDate}</td></tr>`);
                        // Show the book barcode scanning form again
                        $("#scanYourBookSection").animate({ "opacity": 1 }, 500);
                        $("#bookBarcodeSubmitIcon").removeClass('glyphicon-repeat spin').addClass('glyphicon-arrow-right');
                    });
                }).fail(err => {
                    // Server didn't like that barcode, log the error and show an error message.
                    console.log('Err is:');
                    console.log(err);
                    $("#bookBarcodeSubmitIcon").removeClass('glyphicon-repeat spin').addClass('glyphicon-arrow-right');
                    if (err.responseJSON == undefined) {
                        $("#errorMessage").text("An unknown server error occurred, please refresh the page and try again").show(500);
                    } else {
                        $("#errorMessage").text(err.responseJSON.message).show(500);
                    }
                    $("#bookBarcodeInput").val("");
                });
            });





            function getAntiForgeryToken() {
                var token = '@Html.AntiForgeryToken()';
                token = $(token).val();
                return token;
            }

        });
    </script>
}